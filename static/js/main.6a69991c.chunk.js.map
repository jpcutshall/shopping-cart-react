{"version":3,"sources":["Item/Item.tsx","layout/Header.tsx","CartItem/CartItem.tsx","Cart/Cart.tsx","App.tsx","index.tsx"],"names":["Item","item","handleAddToCart","className","src","image","alt","title","description","price","onClick","Header","handleOpenCart","getTotalItems","handleCloseCart","cartItems","handleAboutOpen","CartItem","addToCart","removeFromCart","amount","toFixed","id","Cart","items","length","map","reduce","ack","getProducts","a","fetch","then","res","json","products","App","useState","cartOpen","setCartOpen","setCartItems","aboutOpen","setAboutOpen","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","Dimmer","active","Loader","size","e","preventDefault","window","location","href","Sidebar","Pushable","as","Segment","animation","direction","inverted","onHide","vertical","visible","width","Pusher","dimmed","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6a69991c.chunk.js","sourcesContent":["\n// types \nimport { CartItemType } from '../App'\n\nimport './Item.css'\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\n\nexport const Item: React.FC<Props> = ({ item, handleAddToCart}) => {\n\n    return (\n        <div className=\"Item\">\n            <img src={item.image} alt={item.title} />\n            <hr />\n            <div>\n                <h3>{item.title}</h3>\n                <p>{item.description}</p>\n                <h3>${item.price}</h3>\n            </div>\n            <button onClick={() => handleAddToCart(item)}>Add to cart</button>\n        </div>\n    )\n\n}\n\n\n\n","import { CartItemType } from '../App'\nimport './Header.css'\n\ninterface Props {\n    handleOpenCart: () => void;\n    handleCloseCart: () => void;\n    getTotalItems: (cartItems: CartItemType[]) => number;\n    cartItems: CartItemType[];\n    handleAboutOpen: () => void;\n}\n\nexport const Header: React.FC<Props> = ({ handleOpenCart, handleCloseCart, getTotalItems, cartItems, handleAboutOpen }) => {\n    return (\n        <div className=\"header\">\n            <ul className=\"nav\">\n                <li>\n                    <button onClick={() => handleAboutOpen()} >Home</button>\n                </li>\n                <li>\n                    <button onClick={() => handleAboutOpen()} >About</button>\n                </li>\n                <li>\n                    <button \n                        onClick={() => handleOpenCart()} \n                    >\n                        Cart {getTotalItems(cartItems) > 0 \n                            ? \n                            <p>({getTotalItems(cartItems)})</p>\n                            : null} \n\n                    </button>\n                </li>\n            </ul>\n        </div>\n    )\n}\n","\nimport { CartItemType } from '../App'\n\nimport './CartItem.css'\ntype Props = {\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n}\n\nexport const CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => {\n    return (\n        <div className=\"CartItem\">\n            <h3>{item.title}</h3>\n            <div className=\"info\" >\n                <p>Price: ${item.price} </p>\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n\n            </div>\n            <div className=\"buttons\" >\n\n                <button\n                    className=\"remove-cart-btn\"\n                    onClick={() => removeFromCart(item.id)}\n                >\n                    -\n                </button>\n\n                <p>{item.amount}</p>\n\n                <button\n                    className=\"add-cart-btn\"\n                    onClick={() => addToCart(item)}\n                >\n                    +\n                </button>\n\n            </div>\n            <img className=\"cart-img\" src={item.image} alt={item.title} />\n        </div>\n    )\n}\n","import { CartItem } from '../CartItem/CartItem'\n\nimport { CartItemType } from '../App'\n\nimport './Cart.css'\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n    handleAboutOpen: () => void;\n}\n\nexport const Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart, handleAboutOpen}) => {\n\n    const calculateTotal = (items: CartItemType[]) => {\n       const total = items.reduce((ack: number, item) => ack + item.amount * item.price, 0)\n\n       return total\n    }\n\n    return (\n        <div className=\"Cart\">\n\n            <h2>Your Shopping Cart</h2>\n\n            {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n\n            {cartItems.map(item => (\n                <CartItem \n                  key={item.id}\n                  item={item}\n                  addToCart={addToCart}\n                  removeFromCart={removeFromCart}  \n                \n                />\n            ))}\n            <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n            <button onClick={() => handleAboutOpen()} >Checkout</button>\n        </div>\n    )\n}\n\n\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport { Item } from './Item/Item'\nimport { Header } from './layout/Header'\nimport { Cart } from './Cart/Cart'\n\nimport './App.css';\nimport { Dimmer, Loader, Sidebar, Segment } from 'semantic-ui-react'\n\n\n//types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  title: string;\n  price: number;\n  description: string;\n  image: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => {\n  const products = await fetch('https://fakestoreapi.com/products').then((res) => res.json())\n  return products\n}\n\nconst App = () => {\n  const [ cartOpen, setCartOpen ] = useState(false)\n  const [ cartItems, setCartItems ] = useState([] as CartItemType[])\n  const [ aboutOpen, setAboutOpen ] = useState(false)\n\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products', \n    getProducts\n  )\n  console.log(data)\n\n  const getTotalItems = (items: CartItemType[]) => \n    items.reduce( (ack: number, item) => ack + item.amount, 0);\n   \n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // is the item already in the cart? addto count\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n\n      if (isItemInCart) {\n        return prev.map(item => \n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1}\n            : item\n        );\n      }\n\n      return [...prev, { ...clickedItem, amount: 1 }];\n    })\n  };\n\n  const handleAboutOpen = (): void => {\n    setAboutOpen(!aboutOpen)\n  }\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev => (\n    prev.reduce( (ack, item) => {\n      if (item.id === id) {\n        if (item.amount === 1) return ack;\n        return [...ack, { ...item, amount: item.amount - 1}]\n      } else {\n        return [...ack, item]\n      }\n    }, [] as CartItemType[])\n    ))\n  };\n\n  const handleOpenCart = (): void => {\n    setCartOpen(true);\n  }\n\n  const handleCloseCart = (): void => {\n    setCartOpen(false);\n  }\n\n  if(isLoading) {\n    return (\n        <div className=\"App\">\n          <Header \n            handleOpenCart={handleOpenCart} \n            handleCloseCart={handleCloseCart} \n            getTotalItems={getTotalItems}\n            cartItems={cartItems}\n            handleAboutOpen={handleAboutOpen}\n          />\n          <Dimmer active>\n            <Loader size=\"massive\">Loading</Loader>\n          </Dimmer>\n        </div>\n    )\n  }\n\n  if(aboutOpen) {\n    return (\n        <div className=\"App\">\n          <Header \n            handleOpenCart={handleOpenCart} \n            handleCloseCart={handleCloseCart} \n            getTotalItems={getTotalItems}\n            cartItems={cartItems}\n            handleAboutOpen={handleAboutOpen}\n            \n          />\n          <div className=\"about-page\">\n            <h3>\n              Hello! This is my first React App created with Typescript!\n              It taught me a lot about TS and how much easier it makes coding with fewer errors.\n              I used the fake store api to fill the data for this project!\n            </h3>\n            <hr />\n            <button onClick={ (e) => {\n              e.preventDefault()\n              window.location.href='https://www.buymeacoffee.com/jpcutshall'\n            }} >\n              Buy me a beer! 🍺\n            </button>\n          </div>\n        </div>\n    )\n  }\n\n  if(error) {\n    return (\n      <div className=\"App\">\n        Something went wrong...\n      </div>\n    )\n  }\n\n  return (\n    \n    <div className=\"App\">\n      \n      <Sidebar.Pushable as={Segment}>\n\n        <Sidebar\n          className=\"sidebar\"\n          animation='push'\n          direction='right'\n          inverted='true'\n          onHide={handleCloseCart}\n          vertical='true'\n          visible={cartOpen}\n          width=\"very wide\"\n        >\n          <h2>\n            Shopping Cart\n          </h2>\n          <hr />\n          <Cart \n            cartItems={cartItems} \n            addToCart={handleAddToCart}\n            removeFromCart={handleRemoveFromCart}  \n            handleAboutOpen={handleAboutOpen}\n          />\n          <button onClick={handleCloseCart} >Hide</button>\n        </Sidebar>\n        \n\n        \n        <Sidebar.Pusher dimmed={cartOpen} >\n          <Header \n            handleOpenCart={handleOpenCart} \n            handleCloseCart={handleCloseCart} \n            cartItems={cartItems}\n            getTotalItems={getTotalItems} \n            handleAboutOpen={handleAboutOpen}\n          />\n\n          <div className=\"items-container\">\n          {data?.map( item => (\n            <div key={item.id} className='grid-item'>\n              <Item item={item} handleAddToCart={handleAddToCart} />\n            </div>\n          ))}\n          </div>\n\n\n        </Sidebar.Pusher>\n\n      </Sidebar.Pushable>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css'\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}